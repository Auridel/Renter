//
//  EntryDetailsInteractor.swift
//  Renter
//
//  Created by Oleg Efimov on 17.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EntryDetailsBusinessLogic {
    func getEntry(request: EntryDetails.GetEntry.Request)
    func askToDelete()
    func deleteEntry()
}

protocol EntryDetailsDataStore {
    var entry: HistoryEntry? { get set }
}

class EntryDetailsInteractor: EntryDetailsBusinessLogic, EntryDetailsDataStore {
    
    var presenter: EntryDetailsPresentationLogic?
    
    var entry: HistoryEntry?

    // MARK: Do something (and send response to EntryDetailsPresenter)

    func getEntry(request: EntryDetails.GetEntry.Request) {
        guard let entry = entry else {
            return
        }
        let response = EntryDetails.GetEntry.Response(entry: entry)
        presenter?.presentEntry(response: response)
    }
    
    func deleteEntry( ) {
        guard let entry = entry else {
            return
        }
        ApiManager.shared.removeEntry(with: entry.timestamp) { [weak self] isSuccess in
            if isSuccess {
                NotificationCenter.default.post(name: .entriesUpdated, object: nil)
                self?.presenter?.dismissVC()
            } else {
                self?.presenter?.presentAlert()
            }
        }
    }
    
    func askToDelete() {
        presenter?.presentAlert()
    }

//    func doSomethingElse(request: EntryDetails.RemoveEntry.Request) {
//        worker = EntryDetailsWorker()
//        worker?.doSomeOtherWork()
//
//        let response = EntryDetails.SomethingElse.Response()
//        presenter?.presentSomethingElse(response: response)
//    }
}
