//
//  HistoryInteractor.swift
//  Renter
//
//  Created by Oleg Efimov on 16.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryBusinessLogic {
    func getHistory(request: History.GetHistoryData.Request)
    func getFiltredHistory(request: History.FilterData.Request)
}

protocol HistoryDataStore {
    //var name: String { get set }
}

class HistoryInteractor: HistoryBusinessLogic, HistoryDataStore {
    var presenter: HistoryPresentationLogic?
    var worker: HistoryWorker?
    //var name: String = ""

    // MARK: Do something (and send response to HistoryPresenter)

    func getHistory(request: History.GetHistoryData.Request) {
        worker = HistoryWorker()
        worker?.doSomeWork()

        let response = History.GetHistoryData.Response()
        presenter?.presentHistory(response: response)
    }

    func getFiltredHistory(request: History.FilterData.Request) {
//        worker = HistoryWorker()
//        worker?.doSomeOtherWork()
//
//        let response = History.FilterData.Response()
//        presenter?.presentFiltredHistory(response: response)
    }
}
