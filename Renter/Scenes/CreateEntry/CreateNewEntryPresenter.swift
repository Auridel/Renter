//
//  CreateNewEntryPresenter.swift
//  Renter
//
//  Created by Oleg Efimov on 16.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import UIKit

protocol CreateNewEntryPresentationLogic {
    func presentCurrentPlan(response: CreateNewEntry.GetMeters.Response)
    func presentTransactionStatus(response: CreateNewEntry.SaveNewEntry.Response)
    func presentAlert(with error: String)
}

class CreateNewEntryPresenter: CreateNewEntryPresentationLogic {
    weak var viewController: CreateNewEntryDisplayLogic?

    // MARK: Parse and calc respnse from CreateNewEntryInteractor and send simple view model to CreateNewEntryViewController to be displayed

    func presentCurrentPlan(response: CreateNewEntry.GetMeters.Response) {
        let viewModel = CreateNewEntry.GetMeters.ViewModel(
            cold: "\(response.plan.coldPlan)",
            hot: "\(response.plan.hotPlan)",
            day: "\(response.plan.dayPlan)",
            night: "\(response.plan.nightPlan)")
        viewController?.displayCurrentPlan(viewModel: viewModel)
    }

    func presentTransactionStatus(response: CreateNewEntry.SaveNewEntry.Response) {
        if response.isSuccess {
            viewController?.displayTransactionStatus(
                viewModel: CreateNewEntry.SaveNewEntry.ViewModel(
                    isSuccess: true,
                    error: nil))
        }
//        let viewModel = CreateNewEntry.SomethingElse.ViewModel()
//        viewController?.displayTransactionStatus(viewModel: viewModel)
    }
    
    func presentAlert(with error: String) {
        
    }
}
